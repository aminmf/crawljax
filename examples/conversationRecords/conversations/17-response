HTTP/1.1 200 OK
Date: Fri, 28 Feb 2014 18:54:14 GMT
Server: Apache/2.2.25 (Unix) mod_ssl/2.2.25 OpenSSL/0.9.8y DAV/2 PHP/5.5.3
Last-Modified: Sat, 13 Jan 2007 03:36:28 GMT
ETag: "449cce-297f-426e3b7af6700"
Accept-Ranges: bytes
Content-length: 18814
Keep-Alive: timeout=5, max=100
Connection: Keep-Alive
Content-Type: application/javascript

var admin_js_exec_counter = new Array();
for (var i = 0; i < 240; i++) 
  if (admin_js_exec_counter[i] == undefined || admin_js_exec_counter[i] == null) 
  admin_js_exec_counter[i] = 0;
admin_js_exec_counter[0]++;
var blured = false;
admin_js_exec_counter[2]++;
var MAX_ADD_BOX = 20;
admin_js_exec_counter[3]++;
var nowTime;
function PrepareBody() {
  admin_js_exec_counter[4]++;
  try {
    admin_js_exec_counter[6]++;
    dg('newpasswd').focus();
  }  catch (e) {
}
  try {
    admin_js_exec_counter[7]++;
    dg('loginAdminPass').focus();
  }  catch (e) {
}
  admin_js_exec_counter[8]++;
  var alla = document.getElementsByTagName('a');
  for (var i = 0; i < alla.length; i++) 
    if (alla[i].getAttribute('class') == 'q') 
    {
      admin_js_exec_counter[9]++;
      var where = alla[i].getAttribute('onclick');
      admin_js_exec_counter[10]++;
      where = where.substring(10, where.length - 10);
      admin_js_exec_counter[11]++;
      alla[i].setAttribute('title', 'Help on "' + where + '"');
    }
  admin_js_exec_counter[12]++;
  var alli = document.getElementsByTagName('input');
  for (var i = 0; i < alli.length; i++) 
    if (alli[i].className != "submit") 
    try {
      admin_js_exec_counter[13]++;
      alli[i].onfocus = alli[i].select;
    }    catch (e) {
}
  admin_js_exec_counter[14]++;
  var alli = document.getElementsByTagName('textarea');
  for (var i = 0; i < alli.length; i++) 
    try {
      admin_js_exec_counter[15]++;
      alli[i].onfocus = alli[i].select;
    }    catch (e) {
}
  admin_js_exec_counter[5]++;
}
function getMyXY(eve, t) {
  admin_js_exec_counter[16]++;
  admin_js_exec_counter[17]++;
  var tt;
  if (!eve) {
    admin_js_exec_counter[18]++;
    var eve = window.event;
  }
  if (document.all) {
    admin_js_exec_counter[19]++;
    tt = document.body.scrollTop ? document.body.scrollTop : document.documentElement.scrollTop;
  }
  admin_js_exec_counter[20]++;
  return t ? document.all ? eve.clientY + tt : eve.pageY : document.all ? eve.clientX : eve.pageX;
}
function wordize(s) {
  admin_js_exec_counter[21]++;
  admin_js_exec_counter[22]++;
  return s[0].toUpperCase() + s.substring(1);
}
function dg(x) {
  admin_js_exec_counter[23]++;
  admin_js_exec_counter[24]++;
  return document.getElementById(x);
}
function hideElem(x) {
  admin_js_exec_counter[25]++;
  try {
    admin_js_exec_counter[27]++;
    dg(x).style.display = 'none';
  }  catch (e) {
}
  admin_js_exec_counter[26]++;
}
function showElem(x) {
  admin_js_exec_counter[28]++;
  try {
    admin_js_exec_counter[30]++;
    dg(x).style.display = 'block';
  }  catch (e) {
}
  admin_js_exec_counter[29]++;
}
function inlineElem(x) {
  admin_js_exec_counter[31]++;
  try {
    admin_js_exec_counter[33]++;
    dg(x).style.display = 'inline';
  }  catch (e) {
}
  admin_js_exec_counter[32]++;
}
function tableRowElem(x) {
  admin_js_exec_counter[34]++;
  try {
    admin_js_exec_counter[36]++;
    dg(x).style;
    admin_js_exec_counter[37]++;
    dg(x).style.display = 'table-row';
  }  catch (e) {
  if (dg(x)) {
    admin_js_exec_counter[38]++;
    dg(x).style.display = 'inline';
  }
}
  admin_js_exec_counter[35]++;
}
function checkChangePass() {
  admin_js_exec_counter[39]++;
  admin_js_exec_counter[40]++;
  var np1 = dg('newpasswd1').value;
  admin_js_exec_counter[41]++;
  var np2 = dg('newpasswd2').value;
  if (np1 != np2) 
  {
    admin_js_exec_counter[42]++;
    alert('New passwords are not identic!');
    admin_js_exec_counter[43]++;
    return false;
  }
  if (np1.length < 4) 
  {
    admin_js_exec_counter[44]++;
    alert('New password is too short! (less than 4 character)');
    admin_js_exec_counter[45]++;
    return false;
  }
  admin_js_exec_counter[46]++;
  return true;
}
function checkInstallPass() {
  admin_js_exec_counter[47]++;
  admin_js_exec_counter[48]++;
  var np = dg('newpasswd').value;
  if (np.length < 4) 
  {
    admin_js_exec_counter[49]++;
    alert('New password is too short! (less than 4 character)');
    admin_js_exec_counter[50]++;
    return false;
  }
  admin_js_exec_counter[51]++;
  return true;
}
function checkPrivacyRow() {
  admin_js_exec_counter[52]++;
  admin_js_exec_counter[54]++;
  var p = dg('public').checked;
  if (p) 
  {
    admin_js_exec_counter[55]++;
    dg('password').value = '';
    admin_js_exec_counter[56]++;
    dg('passwordRow').style.display = 'none';
  } else {
    admin_js_exec_counter[57]++;
    dg('passwordRow').style.display = 'block';
    try {
      admin_js_exec_counter[58]++;
      dg('passwordRow').style.display = 'table-row';
    }    catch (e) {
}
  }
  admin_js_exec_counter[53]++;
}
function checkHasPass() {
  admin_js_exec_counter[59]++;
  if (dg('name').value == "") 
  {
    admin_js_exec_counter[60]++;
    alert('"Name" field can not be left blank!');
    admin_js_exec_counter[61]++;
    return false;
  }
  if ((!dg('public').checked) && (dg('password').value == "")) 
  {
    admin_js_exec_counter[62]++;
    alert('Either assign a password or make it public!');
    admin_js_exec_counter[63]++;
    return false;
  }
  admin_js_exec_counter[64]++;
  return true;
}
function confirmDelete(x) {
  admin_js_exec_counter[65]++;
  admin_js_exec_counter[66]++;
  return confirm('Are you sure you want to delete "' + x + '"?');
}
function checkDate() {
  admin_js_exec_counter[67]++;
  if (dg('date').value.length == 0) 
  {
    admin_js_exec_counter[68]++;
    alert('Date is required');
    admin_js_exec_counter[69]++;
    return false;
  }
  admin_js_exec_counter[70]++;
  re = /^\d{4}\/\d{2}\/\d{2}$/;
  if (!re.test(dg('date').value)) 
  {
    admin_js_exec_counter[71]++;
    alert('Date must be in YYYY/MM/DD format');
    admin_js_exec_counter[72]++;
    return false;
  }
  admin_js_exec_counter[73]++;
  return true;
}
function CheckAddPhotoTime() {
  admin_js_exec_counter[74]++;
  admin_js_exec_counter[75]++;
  retime = /^\d{4}\/\d{2}\/\d{2}[ ]\d{2}[:]\d{2}$/;
  admin_js_exec_counter[76]++;
  re = /^\d{4}\/\d{2}\/\d{2}$/;
  admin_js_exec_counter[77]++;
  rehit = /^\d+ \d+\/\d+$/;
  if (!re.test(dg('datetake').value)) 
  {
    admin_js_exec_counter[78]++;
    alert('Date Taken must be in YYYY/MM/DD HH:mm format');
    admin_js_exec_counter[79]++;
    return false;
  }
  if (!retime.test(dg('dateadd').value)) 
  {
    admin_js_exec_counter[80]++;
    alert('Date Added must be in YYYY/MM/DD HH:mm format');
    admin_js_exec_counter[81]++;
    return false;
  }
  if (!rehit.test(dg('hits').value)) 
  {
    admin_js_exec_counter[82]++;
    alert('Hits must be in HITS RATE_SUM/RATE_COUNT format like 288 12/7');
    admin_js_exec_counter[83]++;
    return false;
  }
  admin_js_exec_counter[84]++;
  return true;
}
function CheckAddPhoto() {
  admin_js_exec_counter[85]++;
  if (!CheckAddPhotoTime()) {
    admin_js_exec_counter[86]++;
    return false;
  }
  if (dg('theImgPath').value == "") 
  {
    admin_js_exec_counter[87]++;
    alert('You must acquire a photo first!');
    admin_js_exec_counter[88]++;
    return false;
  }
  admin_js_exec_counter[89]++;
  return true;
}
function ConfirmDelPhotoID(x) {
  admin_js_exec_counter[90]++;
  admin_js_exec_counter[91]++;
  return confirm('Are you sure you want to delete photo number "' + x + '"?');
}
function ConfirmDelPhoto() {
  admin_js_exec_counter[92]++;
  admin_js_exec_counter[93]++;
  return ConfirmDelPhotoID(dg('piddel').value);
}
function ConfirmRestore() {
  admin_js_exec_counter[94]++;
  admin_js_exec_counter[95]++;
  return confirm('Are you sure you want to restore the backup file?');
}
function ConfirmSave() {
  admin_js_exec_counter[96]++;
  admin_js_exec_counter[97]++;
  return confirm('Are you sure you want to save your modification?');
}
function showlinkline(x) {
  admin_js_exec_counter[98]++;
  admin_js_exec_counter[100]++;
  dg('linkline' + x).style.display = 'table-row';
  admin_js_exec_counter[99]++;
}
function hidelinkline(x) {
  admin_js_exec_counter[101]++;
  admin_js_exec_counter[102]++;
}
function linkAddBelow(x) {
  admin_js_exec_counter[103]++;
  admin_js_exec_counter[105]++;
  x = parseInt(x.id.substr(8, x.id.length));
  admin_js_exec_counter[106]++;
  var lets = new Array('n', 'h', 't');
  admin_js_exec_counter[107]++;
  var def = new Array('', 'http://', '');
  admin_js_exec_counter[108]++;
  var n = dg('nLink').value;
  admin_js_exec_counter[109]++;
  x++;
  admin_js_exec_counter[110]++;
  dg('nLink').value = ++n;
  admin_js_exec_counter[111]++;
  var allTable = dg('allLinkLines').childNodes[dg('allLinkLines').childNodes.length - 1];
  admin_js_exec_counter[112]++;
  var m = allTable.childNodes.length;
  for (m--; allTable.childNodes[m].tagName != "TR"; m--) 
    ;
  admin_js_exec_counter[113]++;
  var lastTr = allTable.childNodes[m];
  admin_js_exec_counter[114]++;
  var thisTr = lastTr.cloneNode("tr");
  admin_js_exec_counter[115]++;
  thisTr.id = 'linkline' + (n - 1);
  admin_js_exec_counter[116]++;
  m = thisTr.childNodes.length;
  for (i = 0; thisTr.childNodes[i].tagName != "TD"; i++) 
    ;
  admin_js_exec_counter[117]++;
  thisTr.childNodes[i].innerHTML = (n);
  for (i++; i < m; i++) 
    if (thisTr.childNodes[i].tagName == "TD") 
    if (thisTr.childNodes[i].childNodes[0].tagName == "INPUT") 
    {
      admin_js_exec_counter[118]++;
      var s = thisTr.childNodes[i].childNodes[0].id;
      admin_js_exec_counter[119]++;
      s = "l" + (n - 1) + (s.charAt(s.length - 1));
      admin_js_exec_counter[120]++;
      thisTr.childNodes[i].childNodes[0].name = s;
      admin_js_exec_counter[121]++;
      thisTr.childNodes[i].childNodes[0].id = s;
    }
  admin_js_exec_counter[122]++;
  allTable.appendChild(thisTr);
  for (var i = n - 1; i > x; i--) 
    for (var l = 0; l < 3; l++) 
      {
        admin_js_exec_counter[123]++;
        var j = i - 1;
        admin_js_exec_counter[124]++;
        dg('l' + i + lets[l]).value = dg('l' + j + lets[l]).value;
        admin_js_exec_counter[125]++;
        dg('l' + i + lets[l]).style.fontWeight = dg('l' + j + lets[l]).style.fontWeight;
      }
  for (var l = 0; l < 3; l++) {
    admin_js_exec_counter[126]++;
    dg('l' + x + lets[l]).value = def[l];
  }
  admin_js_exec_counter[127]++;
  dg('l' + x + 'n').style.fontWeight = 'normal';
  admin_js_exec_counter[104]++;
}
function linkDelThis(x) {
  admin_js_exec_counter[128]++;
  admin_js_exec_counter[130]++;
  x = parseInt(x.id.substr(8, x.id.length));
  admin_js_exec_counter[131]++;
  var n = dg('nLink').value;
  if (n == 1) 
  {
    admin_js_exec_counter[132]++;
    alert("You can't omit all the links! One must survive.");
    admin_js_exec_counter[133]++;
    return;
  }
  if (!confirm('Are you sure you want to delete link "' + dg('l' + x + 'n').value + '"?')) {
    admin_js_exec_counter[134]++;
    return;
  }
  admin_js_exec_counter[135]++;
  var lets = new Array('n', 'h', 't');
  admin_js_exec_counter[136]++;
  dg('nLink').value = --n;
  for (var i = x; i < n; i++) 
    for (var l = 0; l < 3; l++) 
      {
        admin_js_exec_counter[137]++;
        var j = i + 1;
        admin_js_exec_counter[138]++;
        dg('l' + i + lets[l]).value = dg('l' + j + lets[l]).value;
        admin_js_exec_counter[139]++;
        dg('l' + i + lets[l]).style.fontWeight = dg('l' + j + lets[l]).style.fontWeight;
      }
  admin_js_exec_counter[140]++;
  removeThisNode('linkline' + n);
  admin_js_exec_counter[129]++;
}
function removeThisNode(node) {
  admin_js_exec_counter[141]++;
  if (dg(node)) {
    admin_js_exec_counter[143]++;
    node = dg(node);
  }
  admin_js_exec_counter[144]++;
  node.parentNode.removeChild(node);
  admin_js_exec_counter[145]++;
  updateMode();
  admin_js_exec_counter[142]++;
}
function addMainColDiv() {
  admin_js_exec_counter[146]++;
  admin_js_exec_counter[148]++;
  var allModes = dg('allModes');
  admin_js_exec_counter[149]++;
  m = 0;
  for (; allModes.childNodes[m].tagName != "DIV"; m++) 
    ;
  admin_js_exec_counter[150]++;
  var firstDiv = allModes.childNodes[m];
  admin_js_exec_counter[151]++;
  var thisDiv = firstDiv.cloneNode("DIV");
  admin_js_exec_counter[152]++;
  thisDiv.innerHTML = "Then<br /><br />" + thisDiv.innerHTML;
  admin_js_exec_counter[153]++;
  m = allModes.childNodes.length;
  for (m--; allModes.childNodes[m].tagName != "A"; m--) 
    ;
  admin_js_exec_counter[154]++;
  var aDiv = allModes.childNodes[m];
  admin_js_exec_counter[155]++;
  allModes.insertBefore(thisDiv, aDiv);
  admin_js_exec_counter[156]++;
  updateMode();
  admin_js_exec_counter[147]++;
}
function updateMode() {
  admin_js_exec_counter[157]++;
  admin_js_exec_counter[159]++;
  var allModes = dg('allModes');
  admin_js_exec_counter[160]++;
  m = allModes.childNodes.length;
  admin_js_exec_counter[161]++;
  r = "";
  for (i = 0; i < m; i++) 
    if (allModes.childNodes[i].tagName == "DIV") 
    {
      admin_js_exec_counter[162]++;
      k = 0;
      for (; allModes.childNodes[i].childNodes[k].tagName != "SELECT"; k++) 
        ;
      admin_js_exec_counter[163]++;
      r = r + '-' + allModes.childNodes[i].childNodes[k].value;
    }
  admin_js_exec_counter[164]++;
  r = r.substr(1, r.length);
  admin_js_exec_counter[165]++;
  dg('mode').value = r;
  admin_js_exec_counter[166]++;
  changePrev(dg('mode').value, '');
  admin_js_exec_counter[158]++;
}
function fixBoldInput(x, val) {
  admin_js_exec_counter[167]++;
  admin_js_exec_counter[169]++;
  dg('l' + x + 'n').style.fontWeight = (val.length > 0) ? 'normal' : 'bold';
  admin_js_exec_counter[168]++;
}
function changePrev() {
  admin_js_exec_counter[170]++;
  admin_js_exec_counter[172]++;
  var mode = dg('mode').value;
  admin_js_exec_counter[173]++;
  var theme = dg('theme').value;
  admin_js_exec_counter[174]++;
  dg('prevmode1').setAttribute("href", './?mode=' + mode + '&theme=' + theme);
  admin_js_exec_counter[175]++;
  dg('prevmode2').setAttribute("href", './?mode=' + mode + '&theme=' + theme);
  admin_js_exec_counter[171]++;
}
function rethumb_fill(ImgPath) {
  admin_js_exec_counter[176]++;
  admin_js_exec_counter[178]++;
  dg('thumbPrev').src = ImgPath;
  admin_js_exec_counter[179]++;
  dg('thePhoto').style.backgroundImage = "url('" + ImgPath + "')";
  admin_js_exec_counter[177]++;
}
function rethumb() {
  admin_js_exec_counter[180]++;
  admin_js_exec_counter[182]++;
  var ImgPath = dg('thumbPrev').src;
  admin_js_exec_counter[183]++;
  dg('thumbPrev').src = '';
  admin_js_exec_counter[184]++;
  dg('thePhoto').style.backgroundImage = "url('" + "')";
  admin_js_exec_counter[185]++;
  setTimeout("rethumb_fill(ImgPath)", 1000);
  admin_js_exec_counter[181]++;
}
function ToggleAdvPref() {
  admin_js_exec_counter[186]++;
  admin_js_exec_counter[188]++;
  var pref = dg('AdvPref');
  if (pref.style.display == 'block') 
  {
    admin_js_exec_counter[189]++;
    pref.style.display = 'none';
    admin_js_exec_counter[190]++;
    dg('ShowHideAdvPref').innerHTML = 'Show';
  } else {
    admin_js_exec_counter[191]++;
    pref.style.display = 'block';
    admin_js_exec_counter[192]++;
    dg('ShowHideAdvPref').innerHTML = 'Hide';
  }
  admin_js_exec_counter[187]++;
}
function updateTimeDiffer(x) {
  admin_js_exec_counter[193]++;
  try {
    admin_js_exec_counter[195]++;
    x = eval(x);
  }  catch (e) {
  admin_js_exec_counter[196]++;
  x = 0;
}
  admin_js_exec_counter[197]++;
  var wantTime = new Date();
  admin_js_exec_counter[198]++;
  wantTime.setTime(nowTime.getTime() + x * 1000 * 60);
  admin_js_exec_counter[199]++;
  var hours, minutes;
  for (hours = wantTime.getHours() + ""; hours.length < 2; hours = "0" + hours) 
    ;
  for (minutes = wantTime.getMinutes() + ""; minutes.length < 2; minutes = "0" + minutes) 
    ;
  admin_js_exec_counter[200]++;
  dg('timeDiffShow').innerHTML = hours + ":" + minutes;
  admin_js_exec_counter[194]++;
}
function CheckDateDrafts() {
  admin_js_exec_counter[201]++;
  admin_js_exec_counter[202]++;
  retime = /^\d{4}\/\d{2}\/\d{2}[ ]\d{2}[:]\d{2}$/;
  if (dg('dateadd').value.length == 0) 
  {
    admin_js_exec_counter[203]++;
    alert('Date is required');
    admin_js_exec_counter[204]++;
    return false;
  }
  if (!retime.test(dg('dateadd').value)) 
  {
    admin_js_exec_counter[205]++;
    alert('Date Added must be in YYYY/MM/DD HH:mm format');
    admin_js_exec_counter[206]++;
    return false;
  }
  admin_js_exec_counter[207]++;
  return true;
}
function CheckActionDrafts() {
  admin_js_exec_counter[208]++;
  if (parseInt(dg('selCount1').innerHTML) == 0) 
  {
    admin_js_exec_counter[209]++;
    alert("At least one file should be selected!");
    admin_js_exec_counter[210]++;
    return false;
  }
  if (dg('groupdel').checked) {
    admin_js_exec_counter[211]++;
    return confirm("Are you sure you want to delete these " + dg('selCount1').innerHTML + " file(s)?");
  } else {
    admin_js_exec_counter[212]++;
    return CheckDateDrafts();
  }
  admin_js_exec_counter[213]++;
  return true;
}
function CheckDeleteThisDrafts(which) {
  admin_js_exec_counter[214]++;
  admin_js_exec_counter[215]++;
  return confirm("Are you sure you want to delete file " + which + "?");
}
function updateSelCount() {
  admin_js_exec_counter[216]++;
  admin_js_exec_counter[218]++;
  var r = 0;
  admin_js_exec_counter[219]++;
  var alli = document.getElementsByTagName('input');
  for (var i = 0; i < alli.length; i++) 
    if (alli[i].className == "checkbox") 
    {
      if (alli[i].checked == true) {
        admin_js_exec_counter[220]++;
        r++;
      }
    }
  admin_js_exec_counter[221]++;
  dg('selCount1').innerHTML = r;
  admin_js_exec_counter[222]++;
  dg('selCount2').innerHTML = r;
  admin_js_exec_counter[217]++;
}
function DraftsSelectBit(_and, _xor) {
  admin_js_exec_counter[223]++;
  admin_js_exec_counter[225]++;
  var alli = document.getElementsByTagName('input');
  for (var i = 0; i < alli.length; i++) 
    if (alli[i].className == "checkbox") 
    {
      admin_js_exec_counter[226]++;
      v = alli[i].checked;
      admin_js_exec_counter[227]++;
      v &= _and;
      admin_js_exec_counter[228]++;
      v ^= _xor;
      admin_js_exec_counter[229]++;
      alli[i].checked = v;
    }
  admin_js_exec_counter[230]++;
  updateSelCount();
  admin_js_exec_counter[224]++;
}
function AddAddBox() {
  admin_js_exec_counter[231]++;
  admin_js_exec_counter[233]++;
  dg('boxv').value = parseInt(dg('boxv').value) + 1;
  if (dg('boxv').value >= MAX_ADD_BOX) {
    admin_js_exec_counter[234]++;
    alert("Maximum adding boxed reached, refresh page!");
  } else {
    admin_js_exec_counter[235]++;
    var i = dg('boxv').value;
    admin_js_exec_counter[236]++;
    var that = dg();
    admin_js_exec_counter[237]++;
    var seed = dg('seedv' + i).value;
    admin_js_exec_counter[238]++;
    dg('upload_iframe_' + seed).setAttribute('src', 'upload.php?draft=yes&seed=' + seed);
    admin_js_exec_counter[239]++;
    showElem('AddBox' + i);
  }
  admin_js_exec_counter[232]++;
}
admin_js_exec_counter[1]++;
